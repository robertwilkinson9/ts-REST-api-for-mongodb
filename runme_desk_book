#!/usr/bin/bash
CONFIG_PREFIX="../ts-ra-config/config."
#echo CONFIG_PREFIX is $CONFIG_PREFIX
TYPES=("desk" "book")
#
rsync -av /certs .
#
docker network ls | grep -q mongo-network
NETWORK_EXISTS=$?
if [ ! $NETWORK_EXISTS -eq 0 ]
then
  docker network create mongo-network
fi
#
docker ps | grep -q my-mongo 
MONGO_EXISTS=$?
if [ ! $MONGO_EXISTS -eq 0 ]
then
  docker run -d --network mongo-network --name my-mongo -p 27017:27017 -v mongo-data:/data/db mongo:4.4.17
fi

MONGO_IP=$(docker inspect my-mongo | jq --raw-output '.[0].NetworkSettings.Networks."mongo-network".IPAddress')
FIRST_DIGITS=$(echo ${MONGO_IP} | sed -e 's/[0-9]*$//')
LAST_DIGIT=$(echo ${MONGO_IP} | sed -e 's/^.*\.//')
NEXT_DIGIT=$((${LAST_DIGIT} + 1))

for TYPE in ${TYPES[@]}; do
	echo TYPE is $TYPE
	CONFIG_FILE=$(echo ${CONFIG_PREFIX}${TYPE}.json)
	API_PORT=$(grep APIPORT $CONFIG_FILE | awk '{print $NF}' | sed -e 's/,$//')
	API_IP=$(echo ${FIRST_DIGITS}${NEXT_DIGIT})
	DOCKERFILE=Dockerfile.${TYPE}

	docker build -t ${TYPE}_backend --file ${DOCKERFILE} .
	docker run --detach --network mongo-network --env MONGO_IP=${MONGO_IP} --env SSL_KEY=/certs/localhost.key --env SSL_CERT=/certs/localhost.crt --env API_IP=${API_IP} --env API_PORT=${API_PORT} -p $API_PORT:$API_PORT ${TYPE}_backend

	NEXT_DIGIT=$((${NEXT_DIGIT} + 1))

	echo ${TYPE}_backend at https://${API_IP}:${API_PORT}
done
