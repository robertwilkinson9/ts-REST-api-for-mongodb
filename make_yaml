#!/bin/bash
TYPE=$1
echo TYPE is $TYPE

APIPORT=$(cat config/config.json | jq --raw-output '.APIPORT')
cat << EOF > compose.yaml.${TYPE}
services:
  ${TYPE}_backend:
    container_name: ${TYPE}_backend
    build: .
    ports:
      - "${APIPORT}:${APIPORT}"
    environment:
      SSL_CERT: "/certs/localhost.crt"
      SSL_KEY: "/certs/localhost.key"
EOF

echo "conn string is ${CONNECTION_STRING}"
if [ ! -z $CONNECTION_STRING ]
then
echo "have conn string is ${CONNECTION_STRING}"
cat << EOF2 >> compose.yaml.${TYPE}
      CONNECTION_STRING: ${CONNECTION_STRING}
EOF2
else

X=$(which minikube)
STATUS=$?
echo STATUS is $STATUS
if [ $STATUS == 0 ]
then
  echo HAVE MINIKUBE
  MONGO_DB=$(minikube service mongodb --url | sed -e 's/^http:\/\///')
  MONGO_IP=$(echo $MONGO_DB | sed -e 's/:.*$//') 
  MONGO_PORT=$(echo $MONGO_DB | sed -e 's/^.*://') 
else
  Y=$(which k3s)
  STATUS=$?
  echo STATUS is $STATUS
  if [ $STATUS == 0 ]
  then
    MONGO_IP_PORT=$(kubectl describe service/mongodb | grep ^Endpoints | awk '{print $2}')
    MONGO_IP=$(echo $MONGO_IP_PORT | sed -e 's/:.*$//') 
    MONGO_PORT=$(echo $MONGO_IP_PORT | sed -e 's/^.*://') 
  else
    echo NOMINIKUBE
    MONGO_IP=$(docker inspect mongo | ./get_docker_ip_address)
    MONGO_PORT=27017
  fi
fi

cat << EOF3 > compose.yaml.${TYPE}
services:
      CONNECTION_STRING: mongodb://reserver:assets@${MONGO_IP}:${MONGO_PORT}/${TYPE}
EOF3
fi
